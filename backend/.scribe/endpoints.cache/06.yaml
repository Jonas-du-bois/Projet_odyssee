## Autogenerated by Scribe. DO NOT MODIFY.

name: Notifications
description: |-

  API pour gérer les notifications utilisateur
endpoints:
  -
    httpMethods:
      - GET
    uri: api/notifications
    metadata:
      groupName: Notifications
      groupDescription: |-

        API pour gérer les notifications utilisateur
      subgroup: ''
      subgroupDescription: ''
      title: "Lister les notifications de l'utilisateur connecté"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "user_id": 1,
                "title": "Nouveau quiz disponible",
                "message": "Un nouveau quiz sur l'aviation est maintenant disponible !",
                "type": "quiz",
                "is_read": false,
                "created_at": "2024-01-15T14:30:00.000000Z",
                "updated_at": "2024-01-15T14:30:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/notifications/{id}/read'
    metadata:
      groupName: Notifications
      groupDescription: |-

        API pour gérer les notifications utilisateur
      subgroup: ''
      subgroupDescription: ''
      title: 'Marquer une notification comme lue'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'ID de la notification à marquer comme lue."
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Notification marquée comme lue"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Notification non trouvée"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/notifications/unread-count
    metadata:
      groupName: Notifications
      groupDescription: |-

        API pour gérer les notifications utilisateur
      subgroup: ''
      subgroupDescription: ''
      title: 'Compter les notifications non lues'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"count":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, PATCH, DELETE, OPTIONS'
          access-control-allow-headers: 'X-Requested-With, Content-Type, X-Token-Auth, Authorization, Accept, Origin'
          access-control-allow-credentials: 'true'
          access-control-max-age: '86400'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
