## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Management'
description: |-

  API pour gérer le profil utilisateur
endpoints:
  -
    httpMethods:
      - GET
    uri: api/profile
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        API pour gérer le profil utilisateur
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Afficher le profil de l'utilisateur connecté
            * @response 200 {
          "success": true,
          "data": {
            "id": 1,
            "name": "John Doe",
            "email": "john.doe@example.com",
            "email_verified_at": "2024-01-01T00:00:00.000000Z",
            "created_at": "2024-01-01T00:00:00.000000Z",
            "updated_at": "2024-01-01T00:00:00.000000Z"
          }
        }
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, PATCH, DELETE, OPTIONS'
          access-control-allow-headers: 'X-Requested-With, Content-Type, X-Token-Auth, Authorization, Accept, Origin'
          access-control-allow-credentials: 'true'
          access-control-max-age: '86400'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/profile
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        API pour gérer le profil utilisateur
      subgroup: ''
      subgroupDescription: ''
      title: "Mettre à jour le profil de l'utilisateur connecté"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Le nom de l'utilisateur."
        required: false
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "L'email de l'utilisateur."
        required: false
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Le nouveau mot de passe (optionnel).'
        required: false
        example: newpassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Confirmation du nouveau mot de passe.'
        required: false
        example: newpassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john.doe@example.com
      password: newpassword123
      password_confirmation: newpassword123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Profil mis à jour avec succès",
            "data": {     *     "id": 1,
              "name": "John Doe",
              "email": "john.doe@example.com",
              "email_verified_at": "2024-01-01T00:00:00.000000Z",
              "created_at": "2024-01-01T00:00:00.000000Z",
              "updated_at": "2024-01-15T14:30:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "errors": {
              "email": ["L'email est déjà utilisé par un autre utilisateur."],
              "password": ["Les mots de passe ne correspondent pas."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}/profile'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        API pour gérer le profil utilisateur
      subgroup: ''
      subgroupDescription: ''
      title: "Afficher le profil public d'un autre utilisateur"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'ID de l'utilisateur."
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "name": "John Doe",
              "rank": {"name": "Silver", "level": 2},
              "total_points": 1500,
              "registration_date": "2024-01-15",
              "quiz_count": 25
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
