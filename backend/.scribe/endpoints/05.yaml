name: Rangs
description: |-

  Gestion des rangs et progression des utilisateurs.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/ranks
    metadata:
      groupName: Rangs
      groupDescription: |-

        Gestion des rangs et progression des utilisateurs.
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste de tous les rangs'
      description: 'Retourne tous les rangs triés par niveau croissant.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "name": "Novice",
                "level": 1,
                "minimum_points": 0
              }
            ],
            "message": "Ranks retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/ranks/adjacent/user
    metadata:
      groupName: Rangs
      groupDescription: |-

        Gestion des rangs et progression des utilisateurs.
      subgroup: ''
      subgroupDescription: ''
      title: 'Rang précédent et suivant d’un utilisateur'
      description: "Retourne les rangs adjacent au rang actuel de l'utilisateur connecté."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "current_rank": {...},
              "previous_rank": {...},
              "next_rank": {...}
            },
            "message": "Adjacent ranks retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/ranks/minimum-points
    metadata:
      groupName: Rangs
      groupDescription: |-

        Gestion des rangs et progression des utilisateurs.
      subgroup: ''
      subgroupDescription: ''
      title: 'Seuils de points par rang'
      description: 'Retourne les points minimum requis pour chaque rang.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "name": "Novice",
                "level": 1,
                "minimum_points": 0,
                "formatted_points": "0"
              }
            ],
            "message": "Minimum points structure retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/ranks/user/progression
    metadata:
      groupName: Rangs
      groupDescription: |-

        Gestion des rangs et progression des utilisateurs.
      subgroup: ''
      subgroupDescription: ''
      title: 'Progression de l’utilisateur'
      description: "Calcule le rang actuel de l'utilisateur et la progression vers le suivant."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "user_points": 320,
              "current_rank": {...},
              "previous_rank": {...},
              "next_rank": {...},
              "points_needed_for_next": 80,
              "progress_percentage": 80.0
            },
            "message": "User progression retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/ranks/statistics
    metadata:
      groupName: Rangs
      groupDescription: |-

        Gestion des rangs et progression des utilisateurs.
      subgroup: ''
      subgroupDescription: ''
      title: 'Statistiques globales par rang'
      description: "Retourne le nombre d'utilisateurs par rang ainsi que leur proportion."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "name": "Novice",
                "level": 1,
                "minimum_points": 0,
                "users_count": 5,
                "percentage": 16.67
              }
            ],
            "message": "Rank statistics retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/ranks/{id}'
    metadata:
      groupName: Rangs
      groupDescription: |-

        Gestion des rangs et progression des utilisateurs.
      subgroup: ''
      subgroupDescription: ''
      title: 'Détails d’un rang'
      description: 'Retourne les informations pour un rang donné par son identifiant.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Requis. ID du rang.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "name": "Novice",
              "level": 1,
              "minimum_points": 0
            },
            "message": "Rank retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
