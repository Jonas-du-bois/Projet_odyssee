name: 'Progress Tracking'
description: |-

  API pour suivre la progression et les statistiques des utilisateurs
endpoints:
  -
    httpMethods:
      - GET
    uri: api/progress
    metadata:
      groupName: 'Progress Tracking'
      groupDescription: |-

        API pour suivre la progression et les statistiques des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Récupérer la progression globale de l'utilisateur connecté"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "user_id": 1,
              "completed_chapters": 15,
              "completed_quizzes": 42,
              "total_points": 3250,
              "current_rank": {
                "id": 3,
                "name": "Expert",
                "min_points": 3000,
                "max_points": 5000
              },
              "next_rank": {
                "id": 4,
                "name": "Master",
                "min_points": 5000,
                "max_points": 10000
              },
              "progress_to_next_rank": 45,
              "last_activity": "2024-01-15T14:30:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/progress/rank
    metadata:
      groupName: 'Progress Tracking'
      groupDescription: |-

        API pour suivre la progression et les statistiques des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Récupérer le rang de l'utilisateur et ses statistiques"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Erreur lors de la r\u00e9cup\u00e9ration du rang","error":"SQLSTATE[HY000]: General error: 1 no such column: points (Connection: sqlite, SQL: select \"user_id\" from \"scores\" group by \"user_id\" order by SUM(points) DESC)"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, PATCH, DELETE, OPTIONS'
          access-control-allow-headers: 'X-Requested-With, Content-Type, X-Token-Auth, Authorization, Accept, Origin'
          access-control-allow-credentials: 'true'
          access-control-max-age: '86400'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/progress/history
    metadata:
      groupName: 'Progress Tracking'
      groupDescription: |-

        API pour suivre la progression et les statistiques des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Récupérer l'historique des quiz de l'utilisateur"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, PATCH, DELETE, OPTIONS'
          access-control-allow-headers: 'X-Requested-With, Content-Type, X-Token-Auth, Authorization, Accept, Origin'
          access-control-allow-credentials: 'true'
          access-control-max-age: '86400'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/progress/wrap
    metadata:
      groupName: 'Progress Tracking'
      groupDescription: |-

        API pour suivre la progression et les statistiques des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Récupérer les données de bilan (wrap) de l'utilisateur"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Erreur lors de la r\u00e9cup\u00e9ration des donn\u00e9es de bilan","error":"SQLSTATE[HY000]: General error: 1 no such column: user_quiz_scores.percentage (Connection: sqlite, SQL: select \"chapters\".\"id\", \"chapters\".\"title\", MAX(user_quiz_scores.percentage) as best_score, COUNT(DISTINCT quiz_instances.id) as attempts from \"chapters\" left join \"quiz_instances\" on \"chapters\".\"id\" = \"quiz_instances\".\"chapter_id\" left join \"user_quiz_scores\" on \"quiz_instances\".\"id\" = \"user_quiz_scores\".\"quiz_instance_id\" and \"user_quiz_scores\".\"user_id\" = 1 group by \"chapters\".\"id\", \"chapters\".\"title\")"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, PATCH, DELETE, OPTIONS'
          access-control-allow-headers: 'X-Requested-With, Content-Type, X-Token-Auth, Authorization, Accept, Origin'
          access-control-allow-credentials: 'true'
          access-control-max-age: '86400'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/leaderboard
    metadata:
      groupName: 'Progress Tracking'
      groupDescription: |-

        API pour suivre la progression et les statistiques des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher le classement général de tous les joueurs'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "user": {
                  "id": 1,
                  "name": "John Doe",
                  "rank": {"name": "Bronze", "level": 1}
                },
                "total_points": 1250,
                "position": 1
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 2|QPzKqmaXBMlxX5yFf8JwNNdJEEHSpeum57Tb536R45e4fe14'
    controller: null
    method: null
    route: null
    custom: []
