name: 'Weekly Challenges'
description: |-

  API pour gérer les défis hebdomadaires et les tickets de loterie
endpoints:
  -
    httpMethods:
      - GET
    uri: api/weekly
    metadata:
      groupName: 'Weekly Challenges'
      groupDescription: |-

        API pour gérer les défis hebdomadaires et les tickets de loterie
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister les défis hebdomadaires actifs'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "title": "Défi de la semaine",
                "description": "Complétez 3 quiz cette semaine",
                "start_date": "2024-01-01",
                "end_date": "2024-01-07",
                "is_active": true,
                "ticket_reward": 5,
                "created_at": "2024-01-01T00:00:00.000000Z",
                "updated_at": "2024-01-01T00:00:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|w3Bx0PTESYgZ5xXQI8lLWxu4T5prrWU129VBNH8Y0d61c53d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/weekly/{id}/claim'
    metadata:
      groupName: 'Weekly Challenges'
      groupDescription: |-

        API pour gérer les défis hebdomadaires et les tickets de loterie
      subgroup: ''
      subgroupDescription: ''
      title: 'Réclamer un ticket après un défi hebdomadaire réussi'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'ID du défi hebdomadaire."
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      quiz_count:
        name: quiz_count
        description: 'Le nombre de quiz complétés.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      score:
        name: score
        description: 'Le score obtenu.'
        required: false
        example: 85
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      quiz_count: 3
      score: 85
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Ticket réclamé avec succès",
            "data": {
              "tickets_earned": 5,
              "total_tickets": 25
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "success": false,
            "message": "Défi non éligible ou déjà réclamé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|w3Bx0PTESYgZ5xXQI8lLWxu4T5prrWU129VBNH8Y0d61c53d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/weekly/series
    metadata:
      groupName: 'Weekly Challenges'
      groupDescription: |-

        API pour gérer les défis hebdomadaires et les tickets de loterie
      subgroup: ''
      subgroupDescription: ''
      title: "Obtenir les informations sur la série de l'utilisateur"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"user_id":4,"updated_at":"2025-06-03T21:39:39.000000Z","created_at":"2025-06-03T21:39:39.000000Z","id":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, PATCH, DELETE, OPTIONS'
          access-control-allow-headers: 'X-Requested-With, Content-Type, X-Token-Auth, Authorization, Accept, Origin'
          access-control-allow-credentials: 'true'
          access-control-max-age: '86400'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|w3Bx0PTESYgZ5xXQI8lLWxu4T5prrWU129VBNH8Y0d61c53d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/weekly
    metadata:
      groupName: 'Weekly Challenges'
      groupDescription: |-

        API pour gérer les défis hebdomadaires et les tickets de loterie
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un nouveau défi hebdomadaire (admin)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|w3Bx0PTESYgZ5xXQI8lLWxu4T5prrWU129VBNH8Y0d61c53d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/weekly/{id}'
    metadata:
      groupName: 'Weekly Challenges'
      groupDescription: |-

        API pour gérer les défis hebdomadaires et les tickets de loterie
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un défi hebdomadaire existant (admin)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the weekly.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|w3Bx0PTESYgZ5xXQI8lLWxu4T5prrWU129VBNH8Y0d61c53d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/weekly/{id}'
    metadata:
      groupName: 'Weekly Challenges'
      groupDescription: |-

        API pour gérer les défis hebdomadaires et les tickets de loterie
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un défi hebdomadaire (admin)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {votre-token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the weekly.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|w3Bx0PTESYgZ5xXQI8lLWxu4T5prrWU129VBNH8Y0d61c53d'
    controller: null
    method: null
    route: null
    custom: []
