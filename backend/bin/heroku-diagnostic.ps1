# Script PowerShell de diagnostic pour d√©ploiement Heroku
# Usage: .\bin\heroku-diagnostic.ps1

Write-Host "üîç DIAGNOSTIC HEROKU BREITLING LEAGUE" -ForegroundColor Cyan
Write-Host "==================================" -ForegroundColor Cyan

# Variables
$HEROKU_APP = "backend-breitling-league-e1d83468309e"

Write-Host "üì± App Heroku: $HEROKU_APP" -ForegroundColor Yellow
Write-Host ""

# 1. V√©rifier le statut de l'application
Write-Host "1Ô∏è‚É£ STATUT DE L'APPLICATION" -ForegroundColor Green
Write-Host "-------------------------" -ForegroundColor Green
heroku ps --app $HEROKU_APP

Write-Host ""

# 2. V√©rifier les logs r√©cents
Write-Host "2Ô∏è‚É£ LOGS R√âCENTS (50 derni√®res lignes)" -ForegroundColor Green
Write-Host "------------------------------------" -ForegroundColor Green
heroku logs --tail --num=50 --app $HEROKU_APP

Write-Host ""

# 3. V√©rifier les variables d'environnement
Write-Host "3Ô∏è‚É£ VARIABLES D'ENVIRONNEMENT" -ForegroundColor Green
Write-Host "---------------------------" -ForegroundColor Green
heroku config --app $HEROKU_APP

Write-Host ""

# 4. V√©rifier la base de donn√©es
Write-Host "4Ô∏è‚É£ INFORMATIONS BASE DE DONN√âES" -ForegroundColor Green
Write-Host "------------------------------" -ForegroundColor Green
heroku pg:info --app $HEROKU_APP

Write-Host ""

# 5. V√©rifier les migrations
Write-Host "5Ô∏è‚É£ STATUT DES MIGRATIONS" -ForegroundColor Green
Write-Host "-----------------------" -ForegroundColor Green
heroku run "php artisan migrate:status" --app $HEROKU_APP

Write-Host ""

# 6. V√©rifier la configuration Laravel
Write-Host "6Ô∏è‚É£ CONFIGURATION LARAVEL" -ForegroundColor Green
Write-Host "-----------------------" -ForegroundColor Green
heroku run "php artisan config:show database" --app $HEROKU_APP

Write-Host ""

# 7. Test de connexion √† la base de donn√©es
Write-Host "7Ô∏è‚É£ TEST CONNEXION BDD" -ForegroundColor Green
Write-Host "--------------------" -ForegroundColor Green

$tinkerScript = @"
try {
    `$pdo = DB::connection()->getPdo();
    echo "‚úÖ Connexion BDD OK\n";
    
    // V√©rifier quelques tables essentielles
    `$users = DB::table('users')->count();
    echo "üë• Utilisateurs: `$users\n";
    
    `$chapters = DB::table('chapters')->count();
    echo "üìö Chapitres: `$chapters\n";
    
    `$ranks = DB::table('ranks')->count();
    echo "üèÜ Rangs: `$ranks\n";
    
    // V√©rifier les tokens Sanctum
    `$tokens = DB::table('personal_access_tokens')->count();
    echo "üîë Tokens actifs: `$tokens\n";
    
} catch (Exception `$e) {
    echo "‚ùå Erreur BDD: " . `$e->getMessage() . "\n";
}
exit;
"@

$tinkerScript | heroku run "php artisan tinker" --app $HEROKU_APP

Write-Host ""

# 8. V√©rifier les routes API
Write-Host "8Ô∏è‚É£ TEST ROUTES API PRINCIPALES" -ForegroundColor Green
Write-Host "-----------------------------" -ForegroundColor Green
$API_URL = "https://$HEROKU_APP.herokuapp.com/api"

Write-Host "Testing $API_URL/login (GET - should return 405)" -ForegroundColor Gray
try {
    $response = Invoke-WebRequest -Uri "$API_URL/login" -Method GET -ErrorAction SilentlyContinue
    Write-Host "Status: $($response.StatusCode)" -ForegroundColor Yellow
} catch {
    Write-Host "Status: $($_.Exception.Response.StatusCode.value__)" -ForegroundColor Yellow
}

Write-Host "Testing $API_URL/chapters (GET - should return 401 without auth)" -ForegroundColor Gray
try {
    $response = Invoke-WebRequest -Uri "$API_URL/chapters" -Method GET -ErrorAction SilentlyContinue
    Write-Host "Status: $($response.StatusCode)" -ForegroundColor Yellow
} catch {
    Write-Host "Status: $($_.Exception.Response.StatusCode.value__)" -ForegroundColor Yellow
}

Write-Host ""

Write-Host "‚úÖ DIAGNOSTIC TERMIN√â" -ForegroundColor Green
Write-Host "===================" -ForegroundColor Green
Write-Host ""
Write-Host "üöÄ Pour red√©ployer si n√©cessaire:" -ForegroundColor Cyan
Write-Host "  git push heroku main" -ForegroundColor White
Write-Host ""
Write-Host "üîÑ Pour relancer les migrations:" -ForegroundColor Cyan
Write-Host "  heroku run 'php artisan migrate:fresh --seed --force' --app $HEROKU_APP" -ForegroundColor White
Write-Host ""
Write-Host "üìã Pour voir les logs en temps r√©el:" -ForegroundColor Cyan
Write-Host "  heroku logs --tail --app $HEROKU_APP" -ForegroundColor White
